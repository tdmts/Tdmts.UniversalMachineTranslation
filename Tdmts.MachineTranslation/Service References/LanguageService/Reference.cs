//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.VisualStudio.ServiceReference.Platforms, version 14.0.23107.0
// 
namespace Tdmts.MachineTranslation.LanguageService {
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TranslateOptions", Namespace="http://schemas.datacontract.org/2004/07/Microsoft.MT.Web.Service.V2")]
    public partial class TranslateOptions : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string CategoryField;
        
        private string ContentTypeField;
        
        private string GenderFromField;
        
        private string GenderToField;
        
        private bool IncludeMultipleMTAlternativesField;
        
        private string ProfanityActionField;
        
        private string ReservedFlagsField;
        
        private string StateField;
        
        private string UriField;
        
        private string UserField;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string Category {
            get {
                return this.CategoryField;
            }
            set {
                if ((object.ReferenceEquals(this.CategoryField, value) != true)) {
                    this.CategoryField = value;
                    this.RaisePropertyChanged("Category");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string ContentType {
            get {
                return this.ContentTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.ContentTypeField, value) != true)) {
                    this.ContentTypeField = value;
                    this.RaisePropertyChanged("ContentType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string GenderFrom {
            get {
                return this.GenderFromField;
            }
            set {
                if ((object.ReferenceEquals(this.GenderFromField, value) != true)) {
                    this.GenderFromField = value;
                    this.RaisePropertyChanged("GenderFrom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string GenderTo {
            get {
                return this.GenderToField;
            }
            set {
                if ((object.ReferenceEquals(this.GenderToField, value) != true)) {
                    this.GenderToField = value;
                    this.RaisePropertyChanged("GenderTo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public bool IncludeMultipleMTAlternatives {
            get {
                return this.IncludeMultipleMTAlternativesField;
            }
            set {
                if ((this.IncludeMultipleMTAlternativesField.Equals(value) != true)) {
                    this.IncludeMultipleMTAlternativesField = value;
                    this.RaisePropertyChanged("IncludeMultipleMTAlternatives");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string ProfanityAction {
            get {
                return this.ProfanityActionField;
            }
            set {
                if ((object.ReferenceEquals(this.ProfanityActionField, value) != true)) {
                    this.ProfanityActionField = value;
                    this.RaisePropertyChanged("ProfanityAction");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string ReservedFlags {
            get {
                return this.ReservedFlagsField;
            }
            set {
                if ((object.ReferenceEquals(this.ReservedFlagsField, value) != true)) {
                    this.ReservedFlagsField = value;
                    this.RaisePropertyChanged("ReservedFlags");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string State {
            get {
                return this.StateField;
            }
            set {
                if ((object.ReferenceEquals(this.StateField, value) != true)) {
                    this.StateField = value;
                    this.RaisePropertyChanged("State");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string Uri {
            get {
                return this.UriField;
            }
            set {
                if ((object.ReferenceEquals(this.UriField, value) != true)) {
                    this.UriField = value;
                    this.RaisePropertyChanged("Uri");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string User {
            get {
                return this.UserField;
            }
            set {
                if ((object.ReferenceEquals(this.UserField, value) != true)) {
                    this.UserField = value;
                    this.RaisePropertyChanged("User");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetTranslationsResponse", Namespace="http://schemas.datacontract.org/2004/07/Microsoft.MT.Web.Service.V2")]
    public partial class GetTranslationsResponse : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string FromField;
        
        private string StateField;
        
        private System.Collections.ObjectModel.ObservableCollection<Tdmts.MachineTranslation.LanguageService.TranslationMatch> TranslationsField;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string From {
            get {
                return this.FromField;
            }
            set {
                if ((object.ReferenceEquals(this.FromField, value) != true)) {
                    this.FromField = value;
                    this.RaisePropertyChanged("From");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string State {
            get {
                return this.StateField;
            }
            set {
                if ((object.ReferenceEquals(this.StateField, value) != true)) {
                    this.StateField = value;
                    this.RaisePropertyChanged("State");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public System.Collections.ObjectModel.ObservableCollection<Tdmts.MachineTranslation.LanguageService.TranslationMatch> Translations {
            get {
                return this.TranslationsField;
            }
            set {
                if ((object.ReferenceEquals(this.TranslationsField, value) != true)) {
                    this.TranslationsField = value;
                    this.RaisePropertyChanged("Translations");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TranslationMatch", Namespace="http://schemas.datacontract.org/2004/07/Microsoft.MT.Web.Service.V2")]
    public partial class TranslationMatch : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int CountField;
        
        private string ErrorField;
        
        private int MatchDegreeField;
        
        private string MatchedOriginalTextField;
        
        private int RatingField;
        
        private string TranslatedTextField;
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int Count {
            get {
                return this.CountField;
            }
            set {
                if ((this.CountField.Equals(value) != true)) {
                    this.CountField = value;
                    this.RaisePropertyChanged("Count");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string Error {
            get {
                return this.ErrorField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorField, value) != true)) {
                    this.ErrorField = value;
                    this.RaisePropertyChanged("Error");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int MatchDegree {
            get {
                return this.MatchDegreeField;
            }
            set {
                if ((this.MatchDegreeField.Equals(value) != true)) {
                    this.MatchDegreeField = value;
                    this.RaisePropertyChanged("MatchDegree");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string MatchedOriginalText {
            get {
                return this.MatchedOriginalTextField;
            }
            set {
                if ((object.ReferenceEquals(this.MatchedOriginalTextField, value) != true)) {
                    this.MatchedOriginalTextField = value;
                    this.RaisePropertyChanged("MatchedOriginalText");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int Rating {
            get {
                return this.RatingField;
            }
            set {
                if ((this.RatingField.Equals(value) != true)) {
                    this.RatingField = value;
                    this.RaisePropertyChanged("Rating");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string TranslatedText {
            get {
                return this.TranslatedTextField;
            }
            set {
                if ((object.ReferenceEquals(this.TranslatedTextField, value) != true)) {
                    this.TranslatedTextField = value;
                    this.RaisePropertyChanged("TranslatedText");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Translation", Namespace="http://schemas.datacontract.org/2004/07/Microsoft.MT.Web.Service.V2")]
    public partial class Translation : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string OriginalTextField;
        
        private int RatingField;
        
        private int SequenceField;
        
        private string TranslatedTextField;
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string OriginalText {
            get {
                return this.OriginalTextField;
            }
            set {
                if ((object.ReferenceEquals(this.OriginalTextField, value) != true)) {
                    this.OriginalTextField = value;
                    this.RaisePropertyChanged("OriginalText");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public int Rating {
            get {
                return this.RatingField;
            }
            set {
                if ((this.RatingField.Equals(value) != true)) {
                    this.RatingField = value;
                    this.RaisePropertyChanged("Rating");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public int Sequence {
            get {
                return this.SequenceField;
            }
            set {
                if ((this.SequenceField.Equals(value) != true)) {
                    this.SequenceField = value;
                    this.RaisePropertyChanged("Sequence");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string TranslatedText {
            get {
                return this.TranslatedTextField;
            }
            set {
                if ((object.ReferenceEquals(this.TranslatedTextField, value) != true)) {
                    this.TranslatedTextField = value;
                    this.RaisePropertyChanged("TranslatedText");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TranslateArrayResponse", Namespace="http://schemas.datacontract.org/2004/07/Microsoft.MT.Web.Service.V2")]
    public partial class TranslateArrayResponse : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string ErrorField;
        
        private string FromField;
        
        private System.Collections.ObjectModel.ObservableCollection<int> OriginalTextSentenceLengthsField;
        
        private string StateField;
        
        private string TranslatedTextField;
        
        private System.Collections.ObjectModel.ObservableCollection<int> TranslatedTextSentenceLengthsField;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string Error {
            get {
                return this.ErrorField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorField, value) != true)) {
                    this.ErrorField = value;
                    this.RaisePropertyChanged("Error");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string From {
            get {
                return this.FromField;
            }
            set {
                if ((object.ReferenceEquals(this.FromField, value) != true)) {
                    this.FromField = value;
                    this.RaisePropertyChanged("From");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public System.Collections.ObjectModel.ObservableCollection<int> OriginalTextSentenceLengths {
            get {
                return this.OriginalTextSentenceLengthsField;
            }
            set {
                if ((object.ReferenceEquals(this.OriginalTextSentenceLengthsField, value) != true)) {
                    this.OriginalTextSentenceLengthsField = value;
                    this.RaisePropertyChanged("OriginalTextSentenceLengths");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string State {
            get {
                return this.StateField;
            }
            set {
                if ((object.ReferenceEquals(this.StateField, value) != true)) {
                    this.StateField = value;
                    this.RaisePropertyChanged("State");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string TranslatedText {
            get {
                return this.TranslatedTextField;
            }
            set {
                if ((object.ReferenceEquals(this.TranslatedTextField, value) != true)) {
                    this.TranslatedTextField = value;
                    this.RaisePropertyChanged("TranslatedText");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public System.Collections.ObjectModel.ObservableCollection<int> TranslatedTextSentenceLengths {
            get {
                return this.TranslatedTextSentenceLengthsField;
            }
            set {
                if ((object.ReferenceEquals(this.TranslatedTextSentenceLengthsField, value) != true)) {
                    this.TranslatedTextSentenceLengthsField = value;
                    this.RaisePropertyChanged("TranslatedTextSentenceLengths");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TranslateArray2Response", Namespace="http://schemas.datacontract.org/2004/07/Microsoft.MT.Web.Service.V2")]
    public partial class TranslateArray2Response : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string AlignmentField;
        
        private string ErrorField;
        
        private string FromField;
        
        private System.Collections.ObjectModel.ObservableCollection<int> OriginalTextSentenceLengthsField;
        
        private string StateField;
        
        private string TranslatedTextField;
        
        private System.Collections.ObjectModel.ObservableCollection<int> TranslatedTextSentenceLengthsField;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string Alignment {
            get {
                return this.AlignmentField;
            }
            set {
                if ((object.ReferenceEquals(this.AlignmentField, value) != true)) {
                    this.AlignmentField = value;
                    this.RaisePropertyChanged("Alignment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string Error {
            get {
                return this.ErrorField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorField, value) != true)) {
                    this.ErrorField = value;
                    this.RaisePropertyChanged("Error");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string From {
            get {
                return this.FromField;
            }
            set {
                if ((object.ReferenceEquals(this.FromField, value) != true)) {
                    this.FromField = value;
                    this.RaisePropertyChanged("From");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public System.Collections.ObjectModel.ObservableCollection<int> OriginalTextSentenceLengths {
            get {
                return this.OriginalTextSentenceLengthsField;
            }
            set {
                if ((object.ReferenceEquals(this.OriginalTextSentenceLengthsField, value) != true)) {
                    this.OriginalTextSentenceLengthsField = value;
                    this.RaisePropertyChanged("OriginalTextSentenceLengths");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string State {
            get {
                return this.StateField;
            }
            set {
                if ((object.ReferenceEquals(this.StateField, value) != true)) {
                    this.StateField = value;
                    this.RaisePropertyChanged("State");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string TranslatedText {
            get {
                return this.TranslatedTextField;
            }
            set {
                if ((object.ReferenceEquals(this.TranslatedTextField, value) != true)) {
                    this.TranslatedTextField = value;
                    this.RaisePropertyChanged("TranslatedText");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public System.Collections.ObjectModel.ObservableCollection<int> TranslatedTextSentenceLengths {
            get {
                return this.TranslatedTextSentenceLengthsField;
            }
            set {
                if ((object.ReferenceEquals(this.TranslatedTextSentenceLengthsField, value) != true)) {
                    this.TranslatedTextSentenceLengthsField = value;
                    this.RaisePropertyChanged("TranslatedTextSentenceLengths");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://api.microsofttranslator.com/V2", ConfigurationName="LanguageService.LanguageService")]
    public interface LanguageService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://api.microsofttranslator.com/V2/LanguageService/AddTranslation", ReplyAction="http://api.microsofttranslator.com/V2/LanguageService/AddTranslationResponse")]
        System.Threading.Tasks.Task AddTranslationAsync(string appId, string originalText, string translatedText, string from, string to, int rating, string contentType, string category, string user, string uri);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://api.microsofttranslator.com/V2/LanguageService/BreakSentences", ReplyAction="http://api.microsofttranslator.com/V2/LanguageService/BreakSentencesResponse")]
        System.Threading.Tasks.Task<System.Collections.ObjectModel.ObservableCollection<int>> BreakSentencesAsync(string appId, string text, string language);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://api.microsofttranslator.com/V2/LanguageService/Detect", ReplyAction="http://api.microsofttranslator.com/V2/LanguageService/DetectResponse")]
        System.Threading.Tasks.Task<string> DetectAsync(string appId, string text);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://api.microsofttranslator.com/V2/LanguageService/DetectArray", ReplyAction="http://api.microsofttranslator.com/V2/LanguageService/DetectArrayResponse")]
        System.Threading.Tasks.Task<System.Collections.ObjectModel.ObservableCollection<string>> DetectArrayAsync(string appId, System.Collections.ObjectModel.ObservableCollection<string> texts);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://api.microsofttranslator.com/V2/LanguageService/GetAppIdToken", ReplyAction="http://api.microsofttranslator.com/V2/LanguageService/GetAppIdTokenResponse")]
        System.Threading.Tasks.Task<string> GetAppIdTokenAsync(string appId, int minRatingRead, int maxRatingWrite, int expireSeconds);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://api.microsofttranslator.com/V2/LanguageService/GetLanguageNames", ReplyAction="http://api.microsofttranslator.com/V2/LanguageService/GetLanguageNamesResponse")]
        System.Threading.Tasks.Task<System.Collections.ObjectModel.ObservableCollection<string>> GetLanguageNamesAsync(string appId, string locale, System.Collections.ObjectModel.ObservableCollection<string> languageCodes, bool useSpokenVariant);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://api.microsofttranslator.com/V2/LanguageService/GetLanguagesForSpeak", ReplyAction="http://api.microsofttranslator.com/V2/LanguageService/GetLanguagesForSpeakRespons" +
            "e")]
        System.Threading.Tasks.Task<System.Collections.ObjectModel.ObservableCollection<string>> GetLanguagesForSpeakAsync(string appId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://api.microsofttranslator.com/V2/LanguageService/GetLanguagesForTranslate", ReplyAction="http://api.microsofttranslator.com/V2/LanguageService/GetLanguagesForTranslateRes" +
            "ponse")]
        System.Threading.Tasks.Task<System.Collections.ObjectModel.ObservableCollection<string>> GetLanguagesForTranslateAsync(string appId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://api.microsofttranslator.com/V2/LanguageService/GetTranslations", ReplyAction="http://api.microsofttranslator.com/V2/LanguageService/GetTranslationsResponse")]
        System.Threading.Tasks.Task<Tdmts.MachineTranslation.LanguageService.GetTranslationsResponse> GetTranslationsAsync(string appId, string text, string from, string to, int maxTranslations, Tdmts.MachineTranslation.LanguageService.TranslateOptions options);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://api.microsofttranslator.com/V2/LanguageService/Translate", ReplyAction="http://api.microsofttranslator.com/V2/LanguageService/TranslateResponse")]
        System.Threading.Tasks.Task<string> TranslateAsync(string appId, string text, string from, string to, string contentType, string category, string reservedFlags);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://api.microsofttranslator.com/V2/LanguageService/AddTranslationArray", ReplyAction="http://api.microsofttranslator.com/V2/LanguageService/AddTranslationArrayResponse" +
            "")]
        System.Threading.Tasks.Task AddTranslationArrayAsync(string appId, System.Collections.ObjectModel.ObservableCollection<Tdmts.MachineTranslation.LanguageService.Translation> translations, string from, string to, Tdmts.MachineTranslation.LanguageService.TranslateOptions options);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://api.microsofttranslator.com/V2/LanguageService/GetTranslationsArray", ReplyAction="http://api.microsofttranslator.com/V2/LanguageService/GetTranslationsArrayRespons" +
            "e")]
        System.Threading.Tasks.Task<System.Collections.ObjectModel.ObservableCollection<Tdmts.MachineTranslation.LanguageService.GetTranslationsResponse>> GetTranslationsArrayAsync(string appId, System.Collections.ObjectModel.ObservableCollection<string> texts, string from, string to, int maxTranslations, Tdmts.MachineTranslation.LanguageService.TranslateOptions options);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://api.microsofttranslator.com/V2/LanguageService/Speak", ReplyAction="http://api.microsofttranslator.com/V2/LanguageService/SpeakResponse")]
        System.Threading.Tasks.Task<string> SpeakAsync(string appId, string text, string language, string format, string options);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://api.microsofttranslator.com/V2/LanguageService/TranslateArray", ReplyAction="http://api.microsofttranslator.com/V2/LanguageService/TranslateArrayResponse")]
        System.Threading.Tasks.Task<System.Collections.ObjectModel.ObservableCollection<Tdmts.MachineTranslation.LanguageService.TranslateArrayResponse>> TranslateArrayAsync(string appId, System.Collections.ObjectModel.ObservableCollection<string> texts, string from, string to, Tdmts.MachineTranslation.LanguageService.TranslateOptions options);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://api.microsofttranslator.com/V2/LanguageService/TranslateArray2", ReplyAction="http://api.microsofttranslator.com/V2/LanguageService/TranslateArray2Response")]
        System.Threading.Tasks.Task<System.Collections.ObjectModel.ObservableCollection<Tdmts.MachineTranslation.LanguageService.TranslateArray2Response>> TranslateArray2Async(string appId, System.Collections.ObjectModel.ObservableCollection<string> texts, string from, string to, Tdmts.MachineTranslation.LanguageService.TranslateOptions options);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface LanguageServiceChannel : Tdmts.MachineTranslation.LanguageService.LanguageService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LanguageServiceClient : System.ServiceModel.ClientBase<Tdmts.MachineTranslation.LanguageService.LanguageService>, Tdmts.MachineTranslation.LanguageService.LanguageService {
        
        /// <summary>
        /// Implement this partial method to configure the service endpoint.
        /// </summary>
        /// <param name="serviceEndpoint">The endpoint to configure</param>
        /// <param name="clientCredentials">The client credentials</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public LanguageServiceClient() : 
                base(LanguageServiceClient.GetDefaultBinding(), LanguageServiceClient.GetDefaultEndpointAddress()) {
            this.Endpoint.Name = EndpointConfiguration.BasicHttpBinding_LanguageService.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public LanguageServiceClient(EndpointConfiguration endpointConfiguration) : 
                base(LanguageServiceClient.GetBindingForEndpoint(endpointConfiguration), LanguageServiceClient.GetEndpointAddress(endpointConfiguration)) {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public LanguageServiceClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(LanguageServiceClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress)) {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public LanguageServiceClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(LanguageServiceClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress) {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public LanguageServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Threading.Tasks.Task AddTranslationAsync(string appId, string originalText, string translatedText, string from, string to, int rating, string contentType, string category, string user, string uri) {
            return base.Channel.AddTranslationAsync(appId, originalText, translatedText, from, to, rating, contentType, category, user, uri);
        }
        
        public System.Threading.Tasks.Task<System.Collections.ObjectModel.ObservableCollection<int>> BreakSentencesAsync(string appId, string text, string language) {
            return base.Channel.BreakSentencesAsync(appId, text, language);
        }
        
        public System.Threading.Tasks.Task<string> DetectAsync(string appId, string text) {
            return base.Channel.DetectAsync(appId, text);
        }
        
        public System.Threading.Tasks.Task<System.Collections.ObjectModel.ObservableCollection<string>> DetectArrayAsync(string appId, System.Collections.ObjectModel.ObservableCollection<string> texts) {
            return base.Channel.DetectArrayAsync(appId, texts);
        }
        
        public System.Threading.Tasks.Task<string> GetAppIdTokenAsync(string appId, int minRatingRead, int maxRatingWrite, int expireSeconds) {
            return base.Channel.GetAppIdTokenAsync(appId, minRatingRead, maxRatingWrite, expireSeconds);
        }
        
        public System.Threading.Tasks.Task<System.Collections.ObjectModel.ObservableCollection<string>> GetLanguageNamesAsync(string appId, string locale, System.Collections.ObjectModel.ObservableCollection<string> languageCodes, bool useSpokenVariant) {
            return base.Channel.GetLanguageNamesAsync(appId, locale, languageCodes, useSpokenVariant);
        }
        
        public System.Threading.Tasks.Task<System.Collections.ObjectModel.ObservableCollection<string>> GetLanguagesForSpeakAsync(string appId) {
            return base.Channel.GetLanguagesForSpeakAsync(appId);
        }
        
        public System.Threading.Tasks.Task<System.Collections.ObjectModel.ObservableCollection<string>> GetLanguagesForTranslateAsync(string appId) {
            return base.Channel.GetLanguagesForTranslateAsync(appId);
        }
        
        public System.Threading.Tasks.Task<Tdmts.MachineTranslation.LanguageService.GetTranslationsResponse> GetTranslationsAsync(string appId, string text, string from, string to, int maxTranslations, Tdmts.MachineTranslation.LanguageService.TranslateOptions options) {
            return base.Channel.GetTranslationsAsync(appId, text, from, to, maxTranslations, options);
        }
        
        public System.Threading.Tasks.Task<string> TranslateAsync(string appId, string text, string from, string to, string contentType, string category, string reservedFlags) {
            return base.Channel.TranslateAsync(appId, text, from, to, contentType, category, reservedFlags);
        }
        
        public System.Threading.Tasks.Task AddTranslationArrayAsync(string appId, System.Collections.ObjectModel.ObservableCollection<Tdmts.MachineTranslation.LanguageService.Translation> translations, string from, string to, Tdmts.MachineTranslation.LanguageService.TranslateOptions options) {
            return base.Channel.AddTranslationArrayAsync(appId, translations, from, to, options);
        }
        
        public System.Threading.Tasks.Task<System.Collections.ObjectModel.ObservableCollection<Tdmts.MachineTranslation.LanguageService.GetTranslationsResponse>> GetTranslationsArrayAsync(string appId, System.Collections.ObjectModel.ObservableCollection<string> texts, string from, string to, int maxTranslations, Tdmts.MachineTranslation.LanguageService.TranslateOptions options) {
            return base.Channel.GetTranslationsArrayAsync(appId, texts, from, to, maxTranslations, options);
        }
        
        public System.Threading.Tasks.Task<string> SpeakAsync(string appId, string text, string language, string format, string options) {
            return base.Channel.SpeakAsync(appId, text, language, format, options);
        }
        
        public System.Threading.Tasks.Task<System.Collections.ObjectModel.ObservableCollection<Tdmts.MachineTranslation.LanguageService.TranslateArrayResponse>> TranslateArrayAsync(string appId, System.Collections.ObjectModel.ObservableCollection<string> texts, string from, string to, Tdmts.MachineTranslation.LanguageService.TranslateOptions options) {
            return base.Channel.TranslateArrayAsync(appId, texts, from, to, options);
        }
        
        public System.Threading.Tasks.Task<System.Collections.ObjectModel.ObservableCollection<Tdmts.MachineTranslation.LanguageService.TranslateArray2Response>> TranslateArray2Async(string appId, System.Collections.ObjectModel.ObservableCollection<string> texts, string from, string to, Tdmts.MachineTranslation.LanguageService.TranslateOptions options) {
            return base.Channel.TranslateArray2Async(appId, texts, from, to, options);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync() {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        public virtual System.Threading.Tasks.Task CloseAsync() {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration) {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_LanguageService)) {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration) {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_LanguageService)) {
                return new System.ServiceModel.EndpointAddress("http://api.microsofttranslator.com/V2/soap.svc");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding() {
            return LanguageServiceClient.GetBindingForEndpoint(EndpointConfiguration.BasicHttpBinding_LanguageService);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress() {
            return LanguageServiceClient.GetEndpointAddress(EndpointConfiguration.BasicHttpBinding_LanguageService);
        }
        
        public enum EndpointConfiguration {
            
            BasicHttpBinding_LanguageService,
        }
    }
}
